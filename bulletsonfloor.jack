class bulletsonfloor{
	field int x;
	field int y;
	
	field int count;

	field bulletsonfloor last;
	field bulletsonfloor next;
	
	
	static bulletsonfloor start;
	
	method void drawpixel(int x,int y){
		if(~((x>511)+(x<0)+(y>255)+(y<0))){
			do Screen.drawPixel(x,y);
			
		}
		return;
	}

	constructor bulletsonfloor initnew(){
		
		let last=null;
		let next=null;
		return this;
	}
	constructor bulletsonfloor new(int xx,int yy){
		
		let x=xx;
		let y=yy;
		
		let count=0;
		do drawShape(1);
		let next=start.rnext();
		do start.wnext(this);
		if (~(next=null)){
			do next.wlast(this);
		}
		let last=start;
		return this;
	}
	
	function void ini(){
		let start=bulletsonfloor.initnew();
		return;
	}
	
	method void drawShape(int color){
		
		do Screen.setColor(color);
		    do Screen.drawPixel(x+1,8+y);
    do Screen.drawPixel(x+1,9+y);
    do Screen.drawPixel(x+1,10+y);
    do Screen.drawPixel(x+2,5+y);
    do Screen.drawPixel(x+2,6+y);
    do Screen.drawPixel(x+2,7+y);
    do Screen.drawPixel(x+2,8+y);
    do Screen.drawPixel(x+2,9+y);
    do Screen.drawPixel(x+2,10+y);
    do Screen.drawPixel(x+2,16+y);
    do Screen.drawPixel(x+2,17+y);
    do Screen.drawPixel(x+2,18+y);
    do Screen.drawPixel(x+3,2+y);
    do Screen.drawPixel(x+3,3+y);
    do Screen.drawPixel(x+3,4+y);
    do Screen.drawPixel(x+3,5+y);
    do Screen.drawPixel(x+3,6+y);
    do Screen.drawPixel(x+3,7+y);
    do Screen.drawPixel(x+3,8+y);
    do Screen.drawPixel(x+3,9+y);
    do Screen.drawPixel(x+3,10+y);
    do Screen.drawPixel(x+3,11+y);
    do Screen.drawPixel(x+3,12+y);
    do Screen.drawPixel(x+3,13+y);
    do Screen.drawPixel(x+3,14+y);
    do Screen.drawPixel(x+3,15+y);
    do Screen.drawPixel(x+3,16+y);
    do Screen.drawPixel(x+3,17+y);
    do Screen.drawPixel(x+4,1+y);
    do Screen.drawPixel(x+4,2+y);
    do Screen.drawPixel(x+4,3+y);
    do Screen.drawPixel(x+4,4+y);
    do Screen.drawPixel(x+4,5+y);
    do Screen.drawPixel(x+4,6+y);
    do Screen.drawPixel(x+4,7+y);
    do Screen.drawPixel(x+4,8+y);
    do Screen.drawPixel(x+4,9+y);
    do Screen.drawPixel(x+4,10+y);
    do Screen.drawPixel(x+4,11+y);
    do Screen.drawPixel(x+4,12+y);
    do Screen.drawPixel(x+4,13+y);
    do Screen.drawPixel(x+4,14+y);
    do Screen.drawPixel(x+4,15+y);
    do Screen.drawPixel(x+5,1+y);
    do Screen.drawPixel(x+5,2+y);
    do Screen.drawPixel(x+5,3+y);
    do Screen.drawPixel(x+5,4+y);
    do Screen.drawPixel(x+5,5+y);
    do Screen.drawPixel(x+5,6+y);
    do Screen.drawPixel(x+5,7+y);
    do Screen.drawPixel(x+5,8+y);
    do Screen.drawPixel(x+5,9+y);
    do Screen.drawPixel(x+5,10+y);
    do Screen.drawPixel(x+5,11+y);
    do Screen.drawPixel(x+5,12+y);
    do Screen.drawPixel(x+5,13+y);
    do Screen.drawPixel(x+5,14+y);
    do Screen.drawPixel(x+6,1+y);
    do Screen.drawPixel(x+6,2+y);
    do Screen.drawPixel(x+6,3+y);
    do Screen.drawPixel(x+6,4+y);
    do Screen.drawPixel(x+6,5+y);
    do Screen.drawPixel(x+6,6+y);
    do Screen.drawPixel(x+6,8+y);
    do Screen.drawPixel(x+6,9+y);
    do Screen.drawPixel(x+6,10+y);
    do Screen.drawPixel(x+6,11+y);
    do Screen.drawPixel(x+6,12+y);
    do Screen.drawPixel(x+7,1+y);
    do Screen.drawPixel(x+7,2+y);
    do Screen.drawPixel(x+7,3+y);
    do Screen.drawPixel(x+7,4+y);
    do Screen.drawPixel(x+7,8+y);
    do Screen.drawPixel(x+7,9+y);
    do Screen.drawPixel(x+7,10+y);
    do Screen.drawPixel(x+8,1+y);
    do Screen.drawPixel(x+8,2+y);
    do Screen.drawPixel(x+8,3+y);
    do Screen.drawPixel(x+8,8+y);
    do Screen.drawPixel(x+8,9+y);
    do Screen.drawPixel(x+9,1+y);
    do Screen.drawPixel(x+9,2+y);

		return;
	}
	
	
	
	method bulletsonfloor rnext(){
		return next;
	}
	method bulletsonfloor rlast(){
		return last;
	}
	method void wnext(bulletsonfloor n){
		let next=n;
		return;
	}
	method void wlast(bulletsonfloor l){
		let last=l;
		return;
	}
	
	function void allUpdate(character me){
		var bulletsonfloor current;
		let current=start.rnext();
		while(~(current=null)){
			if(((current.getx()-me.getx()>-11)*(current.getx()-me.getx()<24))*(current.gety()-me.gety()>0)*(current.gety()-me.gety()<40)){
				do current.drawShape(0);
				do bullets.changeBullet(1);
				let current=current.deleteObject();
			}
			else{
				if((current.changeCount()>200)){
					do current.drawShape(0);
					let current=current.deleteObject();
				}
				else{
					do current.drawShape(1);
					let current=current.rnext();
				}
			}
		}
		return;
	}
	
	
	method void dispose(){
		do drawShape(0);
		do Memory.deAlloc(this);
		return;
	}
	method bulletsonfloor deleteObject(){
		var bulletsonfloor r;
		let r=next;
		if (~(last=null)){
			do last.wnext(next);
		}
		if (~(next=null)){
			do next.wlast(last);
		}
		do dispose();
		return r;
		
	}
	method int getx(){
		return x;
	}
	method int gety(){
		return y;
	}
	function void deleteall(){
		var bulletsonfloor current;
		let current=start.rnext();
		while(~(current=null)){
			let current=current.deleteObject();
		}
		return;
	}
	
	method int changeCount(){
		let count=count+1;
		return count;
	}
	
}	