class skyAttack{
	field int x;
	field int y;
	static int rand;
	field skyAttack last;
	field skyAttack next;
	static int changetobullet;
	static int count;
	
	static skyAttack start;
	
	function int random(){
		let rand=rand+139;
		if(rand>300){
			let rand=rand-300;
		}
		return rand;
	}
	
	method void drawpixel(int x,int y){
		if(~((x>511)+(x<0)+(y>255)+(y<0))){
			do Screen.drawPixel(x,y);
			
		}
		return;
	}

	constructor skyAttack initnew(){
		let rand=30;
		let last=null;
		let next=null;
		return this;
	}
	constructor skyAttack new(){
		
		let x=skyAttack.random()+50;
		let y=30;
		
		
		
		do drawShape(1);
		let next=start.rnext();
		do start.wnext(this);
		if (~(next=null)){
			do next.wlast(this);
		}
		let last=start;
		return this;
	}
	
	function void ini(){
		let start=skyAttack.initnew();
		let count=0;
		let changetobullet=0;
		return;
	}
	
	method void drawShape(int color){
		do Screen.setColor(color);
		do drawpixel(x+0,14+y);
    do drawpixel(x+0,15+y);
    do drawpixel(x+1,10+y);
    do drawpixel(x+1,11+y);
    do drawpixel(x+1,12+y);
    do drawpixel(x+1,13+y);
    do drawpixel(x+1,14+y);
    do drawpixel(x+1,15+y);
    do drawpixel(x+1,16+y);
    do drawpixel(x+1,17+y);
    do drawpixel(x+1,18+y);
    do drawpixel(x+1,19+y);
    do drawpixel(x+2,9+y);
    do drawpixel(x+2,10+y);
    do drawpixel(x+2,11+y);
    do drawpixel(x+2,12+y);
    do drawpixel(x+2,13+y);
    do drawpixel(x+2,14+y);
    do drawpixel(x+2,15+y);
    do drawpixel(x+2,16+y);
    do drawpixel(x+2,17+y);
    do drawpixel(x+2,18+y);
    do drawpixel(x+2,19+y);
    do drawpixel(x+2,20+y);
    do drawpixel(x+2,21+y);
    do drawpixel(x+3,8+y);
    do drawpixel(x+3,9+y);
    do drawpixel(x+3,10+y);
    do drawpixel(x+3,11+y);
    do drawpixel(x+3,12+y);
    do drawpixel(x+3,13+y);
    do drawpixel(x+3,14+y);
    do drawpixel(x+3,15+y);
    do drawpixel(x+3,16+y);
    do drawpixel(x+3,17+y);
    do drawpixel(x+3,18+y);
    do drawpixel(x+3,19+y);
    do drawpixel(x+3,20+y);
    do drawpixel(x+3,21+y);
    do drawpixel(x+3,22+y);
    do drawpixel(x+3,23+y);
    do drawpixel(x+4,7+y);
    do drawpixel(x+4,8+y);
    do drawpixel(x+4,9+y);
    do drawpixel(x+4,10+y);
    do drawpixel(x+4,11+y);
    do drawpixel(x+4,12+y);
    do drawpixel(x+4,13+y);
    do drawpixel(x+4,14+y);
    do drawpixel(x+4,15+y);
    do drawpixel(x+4,16+y);
    do drawpixel(x+4,17+y);
    do drawpixel(x+4,18+y);
    do drawpixel(x+4,19+y);
    do drawpixel(x+4,20+y);
    do drawpixel(x+4,21+y);
    do drawpixel(x+4,22+y);
    do drawpixel(x+4,23+y);
    do drawpixel(x+4,24+y);
    do drawpixel(x+5,7+y);
    do drawpixel(x+5,8+y);
    do drawpixel(x+5,9+y);
    do drawpixel(x+5,10+y);
    do drawpixel(x+5,11+y);
    do drawpixel(x+5,12+y);
    do drawpixel(x+5,13+y);
    do drawpixel(x+5,14+y);
    do drawpixel(x+5,15+y);
    do drawpixel(x+5,16+y);
    do drawpixel(x+5,17+y);
    do drawpixel(x+5,18+y);
    do drawpixel(x+5,19+y);
    do drawpixel(x+5,20+y);
    do drawpixel(x+5,21+y);
    do drawpixel(x+5,22+y);
    do drawpixel(x+5,23+y);
    do drawpixel(x+5,24+y);
    do drawpixel(x+5,25+y);
    do drawpixel(x+6,7+y);
    do drawpixel(x+6,8+y);
    do drawpixel(x+6,9+y);
    do drawpixel(x+6,10+y);
    do drawpixel(x+6,11+y);
    do drawpixel(x+6,12+y);
    do drawpixel(x+6,13+y);
    do drawpixel(x+6,14+y);
    do drawpixel(x+6,15+y);
    do drawpixel(x+6,16+y);
    do drawpixel(x+6,17+y);
    do drawpixel(x+6,18+y);
    do drawpixel(x+6,19+y);
    do drawpixel(x+6,20+y);
    do drawpixel(x+6,21+y);
    do drawpixel(x+6,22+y);
    do drawpixel(x+6,23+y);
    do drawpixel(x+6,24+y);
    do drawpixel(x+6,25+y);
    do drawpixel(x+7,7+y);
    do drawpixel(x+7,8+y);
    do drawpixel(x+7,9+y);
    do drawpixel(x+7,10+y);
    do drawpixel(x+7,11+y);
    do drawpixel(x+7,12+y);
    do drawpixel(x+7,13+y);
    do drawpixel(x+7,14+y);
    do drawpixel(x+7,15+y);
    do drawpixel(x+7,16+y);
    do drawpixel(x+7,17+y);
    do drawpixel(x+7,18+y);
    do drawpixel(x+7,19+y);
    do drawpixel(x+7,20+y);
    do drawpixel(x+7,21+y);
    do drawpixel(x+7,22+y);
    do drawpixel(x+7,23+y);
    do drawpixel(x+7,24+y);
    do drawpixel(x+7,25+y);
    do drawpixel(x+8,7+y);
    do drawpixel(x+8,8+y);
    do drawpixel(x+8,9+y);
    do drawpixel(x+8,10+y);
    do drawpixel(x+8,11+y);
    do drawpixel(x+8,12+y);
    do drawpixel(x+8,13+y);
    do drawpixel(x+8,14+y);
    do drawpixel(x+8,15+y);
    do drawpixel(x+8,16+y);
    do drawpixel(x+8,17+y);
    do drawpixel(x+8,18+y);
    do drawpixel(x+8,19+y);
    do drawpixel(x+8,20+y);
    do drawpixel(x+8,21+y);
    do drawpixel(x+8,22+y);
    do drawpixel(x+8,23+y);
    do drawpixel(x+8,24+y);
    do drawpixel(x+8,25+y);
    do drawpixel(x+9,8+y);
    do drawpixel(x+9,9+y);
    do drawpixel(x+9,10+y);
    do drawpixel(x+9,11+y);
    do drawpixel(x+9,12+y);
    do drawpixel(x+9,13+y);
    do drawpixel(x+9,14+y);
    do drawpixel(x+9,15+y);
    do drawpixel(x+9,16+y);
    do drawpixel(x+9,17+y);
    do drawpixel(x+9,18+y);
    do drawpixel(x+9,19+y);
    do drawpixel(x+9,20+y);
    do drawpixel(x+9,21+y);
    do drawpixel(x+9,22+y);
    do drawpixel(x+9,23+y);
    do drawpixel(x+9,24+y);
    do drawpixel(x+9,25+y);
    do drawpixel(x+10,8+y);
    do drawpixel(x+10,9+y);
    do drawpixel(x+10,10+y);
    do drawpixel(x+10,11+y);
    do drawpixel(x+10,12+y);
    do drawpixel(x+10,13+y);
    do drawpixel(x+10,14+y);
    do drawpixel(x+10,15+y);
    do drawpixel(x+10,16+y);
    do drawpixel(x+10,17+y);
    do drawpixel(x+10,18+y);
    do drawpixel(x+10,19+y);
    do drawpixel(x+10,20+y);
    do drawpixel(x+10,21+y);
    do drawpixel(x+10,22+y);
    do drawpixel(x+10,23+y);
    do drawpixel(x+10,24+y);
    do drawpixel(x+10,25+y);
    do drawpixel(x+11,4+y);
    do drawpixel(x+11,5+y);
    do drawpixel(x+11,6+y);
    do drawpixel(x+11,8+y);
    do drawpixel(x+11,9+y);
    do drawpixel(x+11,10+y);
    do drawpixel(x+11,11+y);
    do drawpixel(x+11,12+y);
    do drawpixel(x+11,13+y);
    do drawpixel(x+11,14+y);
    do drawpixel(x+11,15+y);
    do drawpixel(x+11,16+y);
    do drawpixel(x+11,17+y);
    do drawpixel(x+11,18+y);
    do drawpixel(x+11,19+y);
    do drawpixel(x+11,20+y);
    do drawpixel(x+11,21+y);
    do drawpixel(x+11,22+y);
    do drawpixel(x+11,23+y);
    do drawpixel(x+11,24+y);
    do drawpixel(x+12,3+y);
    do drawpixel(x+12,4+y);
    do drawpixel(x+12,5+y);
    do drawpixel(x+12,8+y);
    do drawpixel(x+12,9+y);
    do drawpixel(x+12,10+y);
    do drawpixel(x+12,11+y);
    do drawpixel(x+12,12+y);
    do drawpixel(x+12,13+y);
    do drawpixel(x+12,14+y);
    do drawpixel(x+12,15+y);
    do drawpixel(x+12,16+y);
    do drawpixel(x+12,17+y);
    do drawpixel(x+12,18+y);
    do drawpixel(x+12,19+y);
    do drawpixel(x+12,20+y);
    do drawpixel(x+12,21+y);
    do drawpixel(x+12,22+y);
    do drawpixel(x+12,23+y);
    do drawpixel(x+12,24+y);
    do drawpixel(x+12,25+y);
    do drawpixel(x+13,2+y);
    do drawpixel(x+13,3+y);
    do drawpixel(x+13,4+y);
    do drawpixel(x+13,5+y);
    do drawpixel(x+13,7+y);
    do drawpixel(x+13,8+y);
    do drawpixel(x+13,9+y);
    do drawpixel(x+13,10+y);
    do drawpixel(x+13,11+y);
    do drawpixel(x+13,12+y);
    do drawpixel(x+13,13+y);
    do drawpixel(x+13,14+y);
    do drawpixel(x+13,15+y);
    do drawpixel(x+13,16+y);
    do drawpixel(x+13,17+y);
    do drawpixel(x+13,18+y);
    do drawpixel(x+13,19+y);
    do drawpixel(x+13,20+y);
    do drawpixel(x+13,21+y);
    do drawpixel(x+13,22+y);
    do drawpixel(x+13,23+y);
    do drawpixel(x+13,24+y);
    do drawpixel(x+13,25+y);
    do drawpixel(x+14,1+y);
    do drawpixel(x+14,2+y);
    do drawpixel(x+14,3+y);
    do drawpixel(x+14,4+y);
    do drawpixel(x+14,7+y);
    do drawpixel(x+14,8+y);
    do drawpixel(x+14,9+y);
    do drawpixel(x+14,10+y);
    do drawpixel(x+14,11+y);
    do drawpixel(x+14,12+y);
    do drawpixel(x+14,13+y);
    do drawpixel(x+14,14+y);
    do drawpixel(x+14,15+y);
    do drawpixel(x+14,16+y);
    do drawpixel(x+14,17+y);
    do drawpixel(x+14,18+y);
    do drawpixel(x+14,19+y);
    do drawpixel(x+14,20+y);
    do drawpixel(x+14,21+y);
    do drawpixel(x+14,22+y);
    do drawpixel(x+14,23+y);
    do drawpixel(x+14,24+y);
    do drawpixel(x+14,25+y);
    do drawpixel(x+15,1+y);
    do drawpixel(x+15,2+y);
    do drawpixel(x+15,3+y);
    do drawpixel(x+15,7+y);
    do drawpixel(x+15,8+y);
    do drawpixel(x+15,9+y);
    do drawpixel(x+15,10+y);
    do drawpixel(x+15,11+y);
    do drawpixel(x+15,12+y);
    do drawpixel(x+15,13+y);
    do drawpixel(x+15,14+y);
    do drawpixel(x+15,15+y);
    do drawpixel(x+15,16+y);
    do drawpixel(x+15,17+y);
    do drawpixel(x+15,18+y);
    do drawpixel(x+15,19+y);
    do drawpixel(x+15,20+y);
    do drawpixel(x+15,21+y);
    do drawpixel(x+15,22+y);
    do drawpixel(x+15,23+y);
    do drawpixel(x+15,24+y);
    do drawpixel(x+15,25+y);
    do drawpixel(x+16,7+y);
    do drawpixel(x+16,8+y);
    do drawpixel(x+16,9+y);
    do drawpixel(x+16,10+y);
    do drawpixel(x+16,11+y);
    do drawpixel(x+16,12+y);
    do drawpixel(x+16,13+y);
    do drawpixel(x+16,14+y);
    do drawpixel(x+16,15+y);
    do drawpixel(x+16,16+y);
    do drawpixel(x+16,17+y);
    do drawpixel(x+16,18+y);
    do drawpixel(x+16,19+y);
    do drawpixel(x+16,20+y);
    do drawpixel(x+16,21+y);
    do drawpixel(x+16,22+y);
    do drawpixel(x+16,23+y);
    do drawpixel(x+16,24+y);
    do drawpixel(x+16,25+y);
    do drawpixel(x+17,7+y);
    do drawpixel(x+17,8+y);
    do drawpixel(x+17,9+y);
    do drawpixel(x+17,10+y);
    do drawpixel(x+17,11+y);
    do drawpixel(x+17,12+y);
    do drawpixel(x+17,13+y);
    do drawpixel(x+17,14+y);
    do drawpixel(x+17,15+y);
    do drawpixel(x+17,16+y);
    do drawpixel(x+17,17+y);
    do drawpixel(x+17,18+y);
    do drawpixel(x+17,19+y);
    do drawpixel(x+17,20+y);
    do drawpixel(x+17,21+y);
    do drawpixel(x+17,22+y);
    do drawpixel(x+17,23+y);
    do drawpixel(x+17,24+y);
    do drawpixel(x+17,25+y);
    do drawpixel(x+18,7+y);
    do drawpixel(x+18,8+y);
    do drawpixel(x+18,9+y);
    do drawpixel(x+18,10+y);
    do drawpixel(x+18,11+y);
    do drawpixel(x+18,12+y);
    do drawpixel(x+18,16+y);
    do drawpixel(x+18,17+y);
    do drawpixel(x+18,18+y);
    do drawpixel(x+18,19+y);
    do drawpixel(x+18,20+y);
    do drawpixel(x+18,21+y);
    do drawpixel(x+18,22+y);
    do drawpixel(x+18,23+y);
    do drawpixel(x+18,24+y);
    do drawpixel(x+19,8+y);
    do drawpixel(x+19,9+y);
    do drawpixel(x+19,10+y);
    do drawpixel(x+19,18+y);
    do drawpixel(x+19,19+y);
    do drawpixel(x+19,20+y);
    do drawpixel(x+19,21+y);
    do drawpixel(x+19,22+y);
    do drawpixel(x+19,23+y);
    do drawpixel(x+20,9+y);
    do drawpixel(x+20,19+y);
    do drawpixel(x+20,20+y);
    do drawpixel(x+20,21+y);

		return;
	}
	
	method void moveDown(){
		do drawShape(0);
		let y=y+8 ;
		if(y>180){
			let y=180;
		}
		do drawShape(1);
		return;
	}
	
	method skyAttack rnext(){ 
		return next;
	}
	method skyAttack rlast(){
		return last;
	}
	method void wnext(skyAttack n){
		let next=n;
		return;
	}
	method void wlast(skyAttack l){
		let last=l;
		return;
	}
	
	function void allUpdate(character me){
		var int xx;
		var skyAttack current;
		let current=start.rnext();
		
		let count=count+1;
		if (count>15){
			do skyAttack.new();
			let count=0;
		}
		while(~(current=null)){
			if(current.gety()=180){
				let changetobullet=changetobullet+1;
				let xx=current.getx();
				let current=current.deleteObject();
				if(changetobullet=3){
					do bulletsonfloor.new(xx,180);
					let changetobullet=0;
				}
				
			}else{
				if((current.getx()-me.getx()<24)*(me.getx()-current.getx()<21)*((current.gety()+8)-me.gety()<42)*(me.gety()-(current.gety()+8)<26)){
					let current=current.deleteObject();
					do HP.losshealth();
				}else{
					do current.moveDown();
					let current=current.rnext();
				}	
			}
		}
		return;
	}
	
	
	method void dispose(){
		do drawShape(0);
		do Memory.deAlloc(this);
		return;
	}
	method skyAttack deleteObject(){
		var skyAttack r;
		let r=next;
		if (~(last=null)){
			do last.wnext(next);
		}
		if (~(next=null)){
			do next.wlast(last);
		}
		do dispose();
		return r;
		
	}
	method int getx(){
		return x;
	}
	method int gety(){
		return y;
	}
	function void deleteall(){
		var skyAttack current;
		let current=start.rnext();
		while(~(current=null)){
			let current=current.deleteObject();
		}
		return;
	}
}	